name: propertyservice-deployment
on:
  push:
    branches:
      - main
      - deployment/base-pipeline
jobs:
  docker_publish:
    runs-on: ubuntu-latest
    - name: Check out the repo
      uses: actions/checkout@v2
    
    - name: Log in to Github Packages
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
      with:
        images: ghcr.io/revelt-propertyservice

    - name: Build and push Docker image
      uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  terraform_provision:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        working-directory: ./deployment/terraform
        id: init
        run: terraform init

      - name: Terraform Validate
        working-directory: ./deployment/terraform
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: ./deployment/terraform
        id: plan
        run: terraform plan -no-color

      - name: Terraform Apply
        working-directory: ./deployment/terraform
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve

      
        


